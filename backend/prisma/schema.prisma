generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id           Int                       @id @default(autoincrement())
  name         String
  address      String?
  lat          Float?
  lon          Float?
  location     Unsupported("geography")?
  storeFlavors StoreFlavor[]
  updateLogs   UpdateLog[]

  @@index([lat, lon])
  @@index([location], map: "idx_store_location", type: Gist)
}

model Flavor {
  name         String        @id
  image        String?
  storeFlavors StoreFlavor[]
  updateLogs   UpdateLog[]
}

model StoreFlavor {
  id          Int      @id @default(autoincrement())
  storeId     Int
  flavorName  String
  available   Int      @default(0)
  lastUpdated DateTime @default(now())
  flavor      Flavor   @relation(fields: [flavorName], references: [name])
  store       Store    @relation(fields: [storeId], references: [id])

  @@unique([storeId, flavorName])
}

model Connection {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
}

model UpdateLog {
  id           Int       @id @default(autoincrement())
  storeId      Int
  flavorName   String
  availability Int        // valeur après mise à jour (0,1,2)
  sessionId    String?    // identifiant de session front (optionnel)
  createdAt    DateTime   @default(now())

  store  Store  @relation(fields: [storeId], references: [id])
  flavor Flavor @relation(fields: [flavorName], references: [name])

  @@index([storeId, createdAt])
  @@index([flavorName, createdAt])
  @@index([createdAt])
}
